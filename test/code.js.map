{"version":3,"file":"code.js","sources":["../dist/bundle.es.js","src.js"],"sourcesContent":["//Except for IN_BROWSER constants should be side effect free for transpiler tree shaking\nvar IN_BROWSER = new Function(\"try {return this===window;}catch(e){ return false;}\")();\nvar IN_NODE = !IN_BROWSER && typeof module !== 'undefined';\nvar SUPPORTS_UTF8 = IN_BROWSER || (process.platform !== 'win32' || process.env.CI || process.env.TERM === 'xterm-256color');\n\nvar uni = IN_BROWSER && window || global;\n\nfunction supportsColor(){\n    if(IN_BROWSER){\n        return {\n            browser: true\n        };\n    }\n    var supports = require('supports-color');\n    supports.browser = false;\n    return supports;\n}\n\nfunction debugging(){\n    return (IN_BROWSER && (/(^\\?|&)DEBUG=(1|true)/.test(window.location.search + ''))) || !!process.env['DEBUG'] && process.env['DEBUG'] === 1 || process.env['DEBUG'] === 'true';\n}\n\nexport { IN_BROWSER, IN_NODE, SUPPORTS_UTF8, uni, supportsColor, debugging, TERM_SUPPORTS_COLOR };\n//# sourceMappingURL=bundle.es.js.map\n","import { IN_BROWSER, SUPPORTS_UTF8 } from '../';\n\nif(IN_BROWSER){\n    console.log('in browser');\n}else{\n    console.log('in node');\n}\n\nconsole.log(SUPPORTS_UTF8 ? 'supports utf8' : `doesn't support utf8`)\n\n//console.log(supportsColor());\n"],"names":[],"mappings":";;;AAAA;AACA,IAAI,UAAU,GAAG,IAAI,QAAQ,CAAC,qDAAqD,CAAC,EAAE,CAAC;AACvF,AACA,IAAI,aAAa,GAAG,UAAU,KAAK,OAAO,CAAC,QAAQ,KAAK,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,KAAK,gBAAgB,CAAC;;ACD3H,GAAG,UAAU,CAAC;IACV,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;CAC7B,IAAI;IACD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;CAC1B;;AAED,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,eAAe,GAAG,sBAAqB,EAAE;;;;;;"}